# Generated by Django 3.0.7 on 2020-09-06 21:13

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(code='invalid event in phone_number', message='Phone number must be digits only, up to 15 digits allowed', regex='^\\+?1?\\d{9,15}$')])),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid event in first_name', message='First name must be alpha characters only', regex='^[a-zA-Z]*$')])),
                ('second_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid event in second_name', message='Surname must be alpha characters only', regex='^[a-zA-Z-]*$')])),
                ('date_of_birth', models.DateTimeField()),
                ('postcode', models.CharField(max_length=8, validators=[django.core.validators.RegexValidator(code='invalid event in postcode', message='Postcode can only be alphanumeric upper-case', regex='^[A-Z0-9]*$')])),
                ('address', models.TextField(max_length=150, validators=[django.core.validators.RegexValidator(code='invalid event in address', message='Please use alphanumeric only', regex='^[A-Z0-9a-z, \r\n]*$')])),
                ('allowed_access', models.PositiveSmallIntegerField(choices=[(1, 'May create private events only or defined individuals/groups'), (2, 'May create events that are open to anyone within organisation'), (3, 'May create events that are open to anyone, including public and autopublish to website')], default=1)),
                ('notes', models.TextField(max_length=500, validators=[django.core.validators.RegexValidator(code='invalid event in notes', message='Please use alphanumeric only', regex='^[A-Z0-9a-z, .\r\n]*$')])),
                ('slug', models.SlugField(default=None, editable=False, unique=True)),
            ],
            options={
                'ordering': ['userid'],
            },
        ),
        migrations.CreateModel(
            name='Working_Hrs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift_name', models.CharField(default='first shift', max_length=80, validators=[django.core.validators.RegexValidator(code='invalid shift name', message='Shift name must be alphanumeric', regex='^[a-zA-Z0-9 ]*$')])),
                ('day_of_week', models.PositiveSmallIntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')], default=1)),
                ('start', models.TimeField(default=django.utils.timezone.now)),
                ('end', models.TimeField(default=django.utils.timezone.now)),
                ('duration', models.DurationField(default=datetime.timedelta(0))),
                ('slug', models.SlugField(default=None, editable=False, max_length=80, unique=True)),
            ],
            options={
                'ordering': ['start'],
            },
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_number', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(code='invalid event in staff_number', message='Please use alphanumeric only', regex='^[A-Z0-9a-z]*$')])),
                ('slug', models.SlugField(default=None, editable=False, max_length=5, unique=True)),
                ('hours', models.ManyToManyField(to='people.Working_Hrs')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='people.Person')),
            ],
            options={
                'ordering': ['person'],
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_number', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(code='invalid event in staff_number', message='Please use alphanumeric only', regex='^[A-Z0-9a-z]*$')])),
                ('nat_insurance_num', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(code='invalid event in nat_insurance_num', message='Please use capital alphanumeric only', regex='^[A-Z0-9 ]*$')])),
                ('salary', models.DecimalField(decimal_places=2, max_digits=8)),
                ('slug', models.SlugField(default=None, editable=False, max_length=5, unique=True)),
                ('hours', models.ManyToManyField(to='people.Working_Hrs')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='people.Person')),
            ],
            options={
                'ordering': ['person'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_name', models.CharField(max_length=25, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(code='invalid event in role_name', message='Please use alphanumeric only', regex='^[A-Z0-9a-z ]*$')])),
                ('role_responsibility', models.TextField(max_length=500, validators=[django.core.validators.RegexValidator(code='invalid event in role_responsibility', message='Please use alphanumeric only', regex='^[A-Z0-9a-z, .]*$')])),
                ('slug', models.SlugField(default=None, editable=False, max_length=25, unique=True)),
                ('responsible_4_roles', models.ManyToManyField(blank=True, default=None, related_name='responsible_roles', to='people.Role')),
            ],
            options={
                'ordering': ['role_name'],
            },
        ),
        migrations.AddField(
            model_name='person',
            name='line_manage',
            field=models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, related_name='manages_table', to='people.Role'),
        ),
        migrations.AddField(
            model_name='person',
            name='organisation_role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.Role'),
        ),
        migrations.AddField(
            model_name='person',
            name='userid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
    ]
